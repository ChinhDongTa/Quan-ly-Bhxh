@* Xếp loại quý cho cá nhân *@
@page "/Human/XeploaiQuy/CaNhan"
@using BhxhWasm.Services

@inject AuthenticationStateProvider authProvider
@inject IHttpClientBase client

<AuthorizeView>
    <Authorized>
        <div class="row">
            <LabelHeader Text="@title"/>
            <AlertMessage Message="@message" />
            @if (list is null)
            {
                <LoadPage />
            }
            else
            {
                 <DetailTable Items="list" CanDelete=true/>
                <FluentStack style="margin-top:20px;">
                    <FluentAnchor Href="@urlTongHopCongTacQuy">Tổng hợp kết quả công tác quý của công chức, viên chức (Phụ luc IV)"</FluentAnchor>
                    <FluentAnchor Href="">Bảng tự chấm điểm của Thủ trưởng đơn vị</FluentAnchor>
                    <FluentAnchor Href="/XepLoaiQuy/BienBanHop">Biên bản họp</FluentAnchor>
                    <FluentAnchor Href="">Bảng điểm đơn vị</FluentAnchor>
                </FluentStack>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <AlertMessage Message=@InfoMessage.NotAuthorized />
    </NotAuthorized>
</AuthorizeView>

@code {

    IEnumerable<QuarterEmployeeRankDto>? list = null;
    string? message=null;
    string? title = null;
    string? urlTongHopCongTacQuy;

    protected override async Task OnInitializedAsync()
    {
       
            string? userId = await authProvider.GetUserIdAsync();
            if (string.IsNullOrEmpty(userId))
            {
            message = InfoMessage.NotFound("userId");
            }
            else
            {
                list = (await client.GetAsync<ResultDto<QuarterEmployeeRankDto>>(QuarterEmployeeRankApiRoute.GetCurrentByUserId(userId)))?.Dtos;
                if (list.HasItems())
                {
                    var one = list!.First();
                    urlTongHopCongTacQuy = $"/Human/XepLoaiquy/BangTongHopKetQuaCongTacQuy/{one.Quarter}/{one.Year}";
                    var dept = (await client.GetAsync<ResultDto<DepartmentDto>>(DepartmentApiRoute.GetOneByEmployeeId(one.EmployeeId)))?.Dto;
                    title = $"Bảng xếp loại cá nhân quý {one.Quarter} năm {one.Year} của {dept?.ShortName}";
                }
                else
                    message = InfoMessage.DownloadFailed;
            }
            //StateHasChanged();
        
    }
}