@page "/Human/XepLoaiQuy/BinhXetDonVi"
@inject IHttpClientBase client

<AuthorizeView Roles="tccb,admin">
    <Authorized>
        <LabelHeader Text="Danh sách xếp loại quý đơn vị" />
        <AlertMessage Message="@message" />
        <FluentGrid>
            <FluentGridItem>
                <FluentNumberField @bind-Value=quarter Label="Quý" />
            </FluentGridItem>
            <FluentGridItem>
                <FluentNumberField @bind-Value=year Label="Năm" />
            </FluentGridItem>
            <FluentGridItem>
                <FluentButton IconStart="@(new Icons.Regular.Size20.Search())" Appearance="Appearance.Accent" Style="margin-top:24px" @onclick="GetList"></FluentButton>
            </FluentGridItem>
        </FluentGrid>
        @if (dtos is null)
        {
            <LoadPage />
        }
        else
        {
            <table class="bordered">
                <thead>
                    <tr>
                        <th>Stt</th>
                        <th scope="col">Đơn vị</th>
                        <th scope="col">Kết quả</th>
                        <th scope="col">Điểm tự chấm</th>
                        <th scope="col">Điểm xét duyệt</th>
                        <th scope="col">Ghi chú</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in dtos)
                    {
                        <tr>
                            <td>@(stt++)</td>
                            <td>@item.DeptName</td>
                            <td>@item.RewardName</td>
                            <td>
                                @item.SelfScore
                            </td>
                            <td>
                                @item.ResultScore
                            </td>
                            <td>
                                @item.Note
                            </td>
                            <td>
                                <InitQuarterDeptRank Item="@item"/>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        <AlertMessage Message=@InfoMessage.NotAuthorized />
    </NotAuthorized>
</AuthorizeView>

@code {
    IEnumerable<QuarterDepartmentRankDto>? dtos = Enumerable.Empty<QuarterDepartmentRankDto>();
    //IEnumerable<DepartmentDto>? deptDto = null;
    string? message = null;
    int year, quarter;
    byte stt = 1;
    protected override async Task OnInitializedAsync()
    {

        var now = DateTime.Now.AddDays(ReadOnlyValue.SubDay);
        quarter = DateTimeExtension.GetCurrentQuarter(now.Month);
        year = now.Year;
        dtos = await GetByTime(quarter, year);
        //StateHasChanged();
        //deptDto = (await client.GetAsync<ResultDto<DepartmentDto>>(DepartmentApiRoute.All(DepartmentApiRoute.ControllerName)))?.Dtos;
    }

    async Task GetList()
    {
        stt = 1;
        dtos = null;
        dtos = await GetByTime(quarter, year);
        //StateHasChanged();
    }

    private async Task<IEnumerable<QuarterDepartmentRankDto>?> GetByTime(int quarter, int year)
    {
        var result = (await client.GetAsync<ResultDto<QuarterDepartmentRankDto>>(QuarterDepartmentRankApiRoute.GetByQuarter((byte)quarter, year)))?.Dtos;
        if (result is null)
        {
            message = InfoMessage.ActionFailed("Lấy ds xếp loại quý đơn vị");
            return Enumerable.Empty<QuarterDepartmentRankDto>();
        }
        else
            return result;
    }
}